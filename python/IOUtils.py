from multiprocessing import Lockimport osimport timeres_filename = "res.txt"log_filename = "log.txt"res_lock = Lock()#create the res and log files if the dont already existif not os.path.exists(res_filename):    file(res_filename, "w")   if not os.path.exists(log_filename):    file(log_filename, "w")def res(text):    """does a synchronized write to the res file"""    res_lock.acquire()    with open(res_filename,"a") as f:        f.write(text)    res_lock.release()    def log(text):    """writes a message to the log file preceded with a timestamp"""    with open(log_filename,"a") as f:        f.write(time.strftime("%H:%M:%S")+" : "+text)        def logToFile(text,filename):    """writes a message to file. It create the file it doesn't already exist"""    if not os.path.exists(filename):        file(filename, "w")    with open(filename, "a") as f:        f.write(text)        